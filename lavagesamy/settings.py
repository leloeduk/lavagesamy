"""
Django settings for lavagesamy project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
from dotenv import load_dotenv
import dj_database_url
        

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Charge le fichier .env
load_dotenv(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mevowfb50v4&8%ftb+5+c1xv#+9j$_l%c!p7nuy_@dxj$##i$2'

# SECURITY WARNING: don't run with debug turned on in production!
# SECRET_KEY = config('SECRET_KEY')
# DEBUG = config('DEBUG', cast=bool)
# ALLOWED_HOSTS = ["*"]

DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost','lavagesamy.onrender.com',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'gestion',  # ton app
    'core',
    "crispy_forms",
    "crispy_bootstrap5",
    'django_filters',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
     'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'lavagesamy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
       'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lavagesamy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASE_URL = os.getenv('DATABASE_URL')

if DATABASE_URL:
    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)
    }
else:
    # Fallback en local avec variables séparées
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DB_NAME', 'lavagesamydb'),
            'USER': os.getenv('DB_USER', 'lavagesamydb_user'),
            'PASSWORD': os.getenv('DB_PASSWORD', ''),
            'HOST': os.getenv('DB_HOST', 'localhost'),
            'PORT': os.getenv('DB_PORT', '5432'),
        }
    }

    # 'default': dj_database_url.parse(config('DATABASE_URL')),

    #  'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'lavagesamydb',
    #     'USER': 'lavagesamydb_user',
    #     'PASSWORD': 'ikEWVcSddmpjBMg2LCdfYh6edkwWo6Ph',
    #     'HOST': 'localhost',
    #     'PORT': '5432',
    # }



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


AUTH_USER_MODEL = 'core.User'  # si ton modèle est dans core/models.py


LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'dashboard'
LOGOUT_REDIRECT_URL = 'login'

# Configurer l'envoi d'emails (pour la réinitialisation de mot de passe)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.votre-fournisseur.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'votre@email.com'
# EMAIL_HOST_PASSWORD = 'votre-mot-de-passe'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# Fichiers statiques
# Si vos fichiers statiques sont dans un dossier `static/` à la racine
# Remplacer
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Par (si vous voulez ignorer ce dossier)
# STATICFILES_DIRS = []

STATIC_URL = '/static/'

# Ce répertoire contiendra tous tes fichiers statiques personnalisés pendant le développement
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Pour la production (collectstatic va mettre tous les fichiers ici)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Médias (futurs PDF ou fichiers uploadés)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Utilisateur personnalisé
AUTH_USER_MODEL = 'core.User'


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
